{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)-plugin-serve/lib/overlays/util.js","webpack:///(webpack)-plugin-serve/lib/client-log.js","webpack:///./src/lib/shading/shaders/basic-vertex-shader.glsl","webpack:///./src/lib/shading/shaders/basic-fragment-shader.glsl","webpack:///./example/misc/test-instances.gltf","webpack:///(webpack)-plugin-serve/client.js","webpack:///(webpack)-plugin-serve/lib/client.js","webpack:///(webpack)-plugin-serve/lib/client-hmr.js","webpack:///(webpack)-plugin-serve/lib/overlays/progress.js","webpack:///(webpack)-plugin-serve/lib/overlays/progress-minimal.js","webpack:///(webpack)-plugin-serve/lib/overlays/status.js","webpack:///./src/lib/core/constants.js","webpack:///./src/lib/graph/scene.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/common.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/vec4.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat3.js","webpack:///./src/lib/graph/node.js","webpack:///./src/lib/camera/orthographic.js","webpack:///./src/lib/camera/perspective.js","webpack:///./src/lib/mesh/primitive.js","webpack:///./src/lib/importer.js","webpack:///./src/lib/shading/shader.js","webpack:///./src/index.js","webpack:///./src/lib/mesh/bufferView.js","webpack:///./src/lib/mesh/accessor.js","webpack:///./src/lib/mesh/mesh.js","webpack:///./src/lib/core/renderer.js","webpack:///./example/controls/CameraController.js","webpack:///./example/demo.js"],"names":["parentHotUpdateCallback","window","chunkId","moreModules","hotAvailableFilesMap","hotRequestedFilesMap","moduleId","Object","prototype","hasOwnProperty","call","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateRequire","me","installedModules","__webpack_require__","fn","request","hot","active","parents","indexOf","push","children","console","warn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","e","hotStatus","hotSetStatus","then","finishChunkLoading","err","hotWaitingFilesMap","hotEnsureUpdateChunk","t","mode","hotStatusHandlers","newStatus","i","length","hotDeferred","hotUpdateNewHash","toModuleId","id","hotCheck","apply","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","requestPath","p","open","timeout","send","onreadystatechange","readyState","status","update","JSON","parse","responseText","c","h","promise","head","script","document","getElementsByTagName","createElement","charset","src","appendChild","deferred","hotApply","result","outdatedModules","options","cb","j","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","_selfAccepted","_selfDeclined","type","_main","parentId","parent","_declinedDependencies","concat","_acceptedDependencies","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","idx","outdatedSelfAcceptedModules","errorHandler","keys","forEach","installedChunks","hotDisposeChunk","dependency","moduleOutdatedDependencies","data","disposeHandlers","_disposeHandlers","child","splice","modules","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","exports","l","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","check","addStatusHandler","removeStatusHandler","hotCreateModule","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","s","addCss","css","style","styleSheet","cssText","createTextNode","addHtml","html","div","nodes","innerHTML","trim","firstChild","body","socketMessage","socket","handler","addEventListener","message","action","info","log","refresh","webpackPluginServe","replace","init","initProgress","initMinimalProgress","initStatus","client","compress","historyFallback","hmr","host","liveReload","level","prefix","template","port","progress","secure","static","address","WebSocket","close","errors","hash","warnings","shortHash","location","reload","onclose","latest","[object Object]","async","includes","hmrStatus","percent","querySelector","offset","setAttribute","toString","Math","floor","svg","classList","remove","setTimeout","add","reset","width","wrapper","hidden","aside","beacon","problems","preErrors","preWarnings","titleErrors","titleWarnings","className","min","stopImmediatePropagation","innerText","addErrors","contains","warning","addWarnings","COMPONENT","freeze","SIZE","5120","5121","5122","5123","5125","5126","TYPE","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","ID","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","PROJECTION","ORTHOGRAPHIC","PERSPECTIVE","ATTRIBUTE_LOCATION","POSITION","NORMAL","TEXCOORD_0","JOINTS_0","JOINTS_1","WEIGHTS_0","WEIGHTS_1","TANGENT","VALID_ACCESSOR_TYPES","INDEX","componentType","TEXCOORD_1","COLOR_0","TARGET","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","random","PI","out","clone","copy","fromValues","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","identity","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","multiply","b0","b1","b2","b3","translate","v","x","y","z","mat4_scale","rotate","rad","axis","b12","b20","b21","b22","len","sqrt","sin","cos","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","targetTo","target","str","frob","pow","subtract","multiplyScalar","multiplyScalarAndAdd","scale","exactEquals","mat4_equals","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","mul","sub","vec3_create","vec3_clone","vec3_length","vec3_fromValues","vec3_copy","vec3_set","vec3_add","vec3_subtract","vec3_multiply","divide","ceil","vec3_min","vec3_max","round","vec3_scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","vec3_dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec3_rotateX","vec3_rotateY","vec3_rotateZ","angle","tempA","tempB","cosine","acos","vec3_str","vec3_exactEquals","vec3_equals","vec","vec3_sub","vec3_mul","dist","sqrDist","vec3_len","sqrLen","stride","count","arg","vec4_length","vec4_squaredLength","quat_create","quat_identity","setAxisAngle","getAxisAngle","out_axis","quat_multiply","quat_rotateX","quat_rotateY","quat_rotateZ","calculateW","slerp","omega","cosom","sinom","scale0","scale1","quat_random","u1","u2","u3","sqrt1MinusU1","sqrtU1","quat_invert","dot","invDot","conjugate","fromMat3","fTrace","fRoot","k","fromEuler","halfToRad","cx","cy","cz","quat_str","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","quat_clone","quat_fromValues","quat_copy","quat_set","quat_add","quat_mul","quat_scale","quat_dot","quat_lerp","quat_length","quat_len","quat_squaredLength","quat_sqrLen","quat_normalize","quat_exactEquals","quat_equals","rotationTo","sqlerp","setAxes","view","graph_node","mesh","camera","rotation","quat_namespaceObject","vec3_namespaceObject","matrix","node","localMatrix","mat4_namespaceObject","worldMatrix","this","index","parentWorldMatrix","updateLocalMatrix","tick","orthographic","xmag","ymag","zfar","znear","projectionMatrix","camera_perspective","aspectRatio","yfov","mesh_primitive","attributes","material","indices","extras","SUPPORTED_VERSION","split","parseInt","compile","gl","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","importer","raw","gltf","version","asset","minVersion","buffers","all","uri","fetch","res","arrayBuffer","bufferViews","buffer","bufferIndex","byteLength","byteOffset","byteStride","mesh_bufferView","accessors","bufferView","bufferViewIndex","fround","normalized","mesh_accessor","meshes","primitives","primitiveObjects","mesh_mesh","attributeIndices","indicesIndex","accessor","ibv","createPrimitive","cameras","orthographicProperties","perspectiveProperties","scenes","nodeIndices","graph_scene","createNode","meshIndex","cameraIndex","childIndices","scene","renderer","height","domElement","getContext","viewport","clearColor","enable","DEPTH_TEST","CULL_FACE","program","vertexShaderSource","fragmentShaderSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","basic_vertex_shader_default","basic_fragment_shader_default","useProgram","viewMatrix","modelViewMatrix","uniformMatrix4fv","getUniformLocation","primitive","vao","bindVertexArray","drawElements","drawArrays","TRIANGLES","cameraNode","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","meshNodes","getMesh","draw","createVertexArray","element_array_buffer","bindBuffer","bufferAccessCount","createBuffer","dataView","DataView","bufferData","STATIC_DRAW","array_buffer","vertexAttribPointer","enableVertexAttribArray","load","deleteBuffer","deleteVertexArray","unload","perspectiveCamera","orthographicCamera","CameraController_CameraController","FD","UD","LD","pitchQuat","yawQuat","longitudinalDirection","lateralDirection","pitch","yaw","longitudinal","lateral","applyTranslation","test_instances_default","innerWidth","innerHeight","updateProjectionMatrix","setSize","cameraController","canvas","requestPointerLock","updateCamRotation","event","movementX","movementY","pointerLockElement","removeEventListener","move","forward","backward","speed","preventDefault","code","requestAnimationFrame","loop","now","delta","moveSpeed","render","catch"],"mappings":"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","file":"main.js","sourcesContent":[" \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"wps-hmr.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\thead.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"wps-hmr.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"86139354b0a55fb21d6c\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = 0;\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(9)(__webpack_require__.s = 9);\n","/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst addHtml = (html, parent) => {\n  const div = document.createElement('div');\n  const nodes = [];\n\n  div.innerHTML = html.trim();\n\n  while (div.firstChild) {\n    nodes.push((parent || document.body).appendChild(div.firstChild));\n  }\n\n  return nodes;\n};\n\nconst addCss = (css) => {\n  const style = document.createElement('style');\n\n  style.type = 'text/css';\n\n  if (css.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  // append the stylesheet for the svg\n  document.head.appendChild(style);\n};\n\nconst socketMessage = (socket, handler) => {\n  socket.addEventListener('message', (message) => {\n    const { action, data } = JSON.parse(message.data);\n    handler(action, data);\n  });\n};\n\nmodule.exports = { addCss, addHtml, socketMessage };\n","/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { error, info, warn } = console;\nconst log = {\n  error: error.bind(console, '⬡ wps:'),\n  info: info.bind(console, '⬡ wps:'),\n  refresh: 'Please refresh the page',\n  warn: warn.bind(console, '⬡ wps:')\n};\n\nmodule.exports = log;\n","module.exports = \"#version 300 es\\r\\n\\r\\nprecision highp float;\\r\\n\\r\\nlayout(location = 0) in vec4 vPosition;\\r\\n\\r\\nuniform mat4 projectionMatrix;\\r\\nuniform mat4 modelViewMatrix;\\r\\n\\r\\nvoid main() {\\r\\n    gl_Position = projectionMatrix * modelViewMatrix * vPosition;\\r\\n}\"","module.exports = \"#version 300 es\\r\\n\\r\\nprecision highp float;\\r\\n\\r\\nuniform vec4 color;\\r\\n\\r\\nout vec4 fColor;\\r\\n\\r\\nvoid main() {\\r\\n    fColor = vec4(1.0, 0.0, 0.0, 1.0);\\r\\n}\"","module.exports = \"{\\n    \\\"accessors\\\" : [\\n        {\\n            \\\"bufferView\\\" : 0,\\n            \\\"componentType\\\" : 5121,\\n            \\\"count\\\" : 36,\\n            \\\"max\\\" : [\\n                23\\n            ],\\n            \\\"min\\\" : [\\n                0\\n            ],\\n            \\\"type\\\" : \\\"SCALAR\\\"\\n        },\\n        {\\n            \\\"bufferView\\\" : 1,\\n            \\\"componentType\\\" : 5126,\\n            \\\"count\\\" : 24,\\n            \\\"max\\\" : [\\n                1.0000004768371582,\\n                1.0,\\n                1.0000005960464478\\n            ],\\n            \\\"min\\\" : [\\n                -1.0000003576278687,\\n                -1.0,\\n                -1.0000003576278687\\n            ],\\n            \\\"type\\\" : \\\"VEC3\\\"\\n        },\\n        {\\n            \\\"bufferView\\\" : 2,\\n            \\\"componentType\\\" : 5126,\\n            \\\"count\\\" : 24,\\n            \\\"max\\\" : [\\n                1.0,\\n                1.0,\\n                1.0\\n            ],\\n            \\\"min\\\" : [\\n                -1.0,\\n                -1.0,\\n                -1.0\\n            ],\\n            \\\"type\\\" : \\\"VEC3\\\"\\n        }\\n    ],\\n    \\\"asset\\\" : {\\n        \\\"generator\\\" : \\\"Khronos Blender glTF 2.0 exporter\\\",\\n        \\\"version\\\" : \\\"2.0\\\"\\n    },\\n    \\\"bufferViews\\\" : [\\n        {\\n            \\\"buffer\\\" : 0,\\n            \\\"byteLength\\\" : 36,\\n            \\\"byteOffset\\\" : 0,\\n            \\\"target\\\" : 34963\\n        },\\n        {\\n            \\\"buffer\\\" : 0,\\n            \\\"byteLength\\\" : 288,\\n            \\\"byteOffset\\\" : 36,\\n            \\\"target\\\" : 34962\\n        },\\n        {\\n            \\\"buffer\\\" : 0,\\n            \\\"byteLength\\\" : 288,\\n            \\\"byteOffset\\\" : 324,\\n            \\\"target\\\" : 34962\\n        }\\n    ],\\n    \\\"buffers\\\" : [\\n        {\\n            \\\"byteLength\\\" : 612,\\n            \\\"uri\\\" : \\\"data:application/octet-stream;base64,AAECAwEABAUGBAcFCAkKCAsJDA0ODA8NEBESEBMRFBUWFBcVAACAPwAAgL///3+/AQCAvwAAgL/9/38/+v9/vwAAgL8DAIC/AACAPwAAgL8AAIA/AwCAvwAAgD/6/38/BACAPwAAgD/3/3+///9/vwAAgD8AAIC/9f9/PwAAgD8FAIA/BACAPwAAgD/3/3+/AACAPwAAgL8AAIA/AACAPwAAgL///3+/9f9/PwAAgD8FAIA/9f9/PwAAgD8FAIA/AQCAvwAAgL/9/38/AACAPwAAgL8AAIA/AwCAvwAAgD/6/38/AwCAvwAAgD/6/38/+v9/vwAAgL8DAIC/AQCAvwAAgL/9/38///9/vwAAgD8AAIC///9/vwAAgD8AAIC/AACAPwAAgL///3+/+v9/vwAAgL8DAIC/BACAPwAAgD/3/3+/AAAAAAAAgL8AAACAAAAAAAAAgL8AAACAAAAAAAAAgL8AAACAAAAAAAAAgL8AAACAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAACAP+z/PzMAAJg0AACAP+z/PzMAAJg0AACAP+z/PzMAAJg0AACAP+z/PzMAAJg0AACYtAkA4LMAAIA/AACYtAkA4LMAAIA/AACYtAkA4LMAAIA/AACYtAkA4LMAAIA/AACAv///D7QCAHC0AACAv///D7QCAHC0AACAv///D7QCAHC0AACAv///D7QCAHC0AACANAAAYDQAAIC/AACANAAAYDQAAIC/AACANAAAYDQAAIC/AACANAAAYDQAAIC/\\\"\\n        }\\n    ],\\n    \\\"cameras\\\" : [\\n        {\\n            \\\"name\\\" : \\\"Camera\\\",\\n            \\\"perspective\\\" : {\\n                \\\"aspectRatio\\\" : 1.7777777777777777,\\n                \\\"yfov\\\" : 0.5033799372418416,\\n                \\\"zfar\\\" : 100.0,\\n                \\\"znear\\\" : 0.10000000149011612\\n            },\\n            \\\"type\\\" : \\\"perspective\\\"\\n        }\\n    ],\\n    \\\"materials\\\" : [\\n        {\\n            \\\"name\\\" : \\\"Material\\\",\\n            \\\"pbrMetallicRoughness\\\" : {\\n                \\\"baseColorFactor\\\" : [\\n                    0.6400000190734865,\\n                    0.6400000190734865,\\n                    0.6400000190734865,\\n                    1.0\\n                ],\\n                \\\"metallicFactor\\\" : 0.0\\n            }\\n        }\\n    ],\\n    \\\"meshes\\\" : [\\n        {\\n            \\\"name\\\" : \\\"Cube\\\",\\n            \\\"primitives\\\" : [\\n                {\\n                    \\\"attributes\\\" : {\\n                        \\\"NORMAL\\\" : 2,\\n                        \\\"POSITION\\\" : 1\\n                    },\\n                    \\\"indices\\\" : 0,\\n                    \\\"material\\\" : 0\\n                }\\n            ]\\n        }\\n    ],\\n    \\\"nodes\\\" : [\\n        {\\n            \\\"camera\\\" : 0,\\n            \\\"name\\\" : \\\"Correction_Camera\\\",\\n            \\\"rotation\\\" : [\\n                -0.7071067690849304,\\n                -0.0,\\n                0.0,\\n                0.7071067690849304\\n            ]\\n        },\\n        {\\n            \\\"children\\\" : [\\n                0\\n            ],\\n            \\\"name\\\" : \\\"Camera\\\",\\n            \\\"rotation\\\" : [\\n                0.4617486894130707,\\n                0.0,\\n                -0.0,\\n                0.887010931968689\\n            ],\\n            \\\"translation\\\" : [\\n                0.0,\\n                7.0,\\n                8.0\\n            ]\\n        },\\n        {\\n            \\\"mesh\\\" : 0,\\n            \\\"name\\\" : \\\"Cube\\\",\\n            \\\"translation\\\" : [\\n                0.0,\\n                1.0,\\n                -0.0\\n            ]\\n        },\\n        {\\n            \\\"mesh\\\" : 0,\\n            \\\"name\\\" : \\\"Cube.001\\\",\\n            \\\"translation\\\" : [\\n                0.0,\\n                0.0,\\n                -3.0\\n            ]\\n        }\\n    ],\\n    \\\"scene\\\" : 0,\\n    \\\"scenes\\\" : [\\n        {\\n            \\\"name\\\" : \\\"Scene\\\",\\n            \\\"nodes\\\" : [\\n                3,\\n                2,\\n                1\\n            ]\\n        }\\n    ]\\n}\\n\"","/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\n\n/**\n * @note This file exists merely as an easy reference for folks adding it to their configuration entries\n */\n\n(() => {\n  if (window.webpackPluginServe) {\n    return;\n  }\n\n  window.webpackPluginServe = true;\n\n  // eslint-disable-next-line global-require\n  require('./lib/client');\n})();\n","/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { replace } = require('./client-hmr');\nconst { error, info, refresh, warn } = require('./client-log');\nconst { init: initProgress } = require('./overlays/progress');\nconst { init: initMinimalProgress } = require('./overlays/progress-minimal');\nconst { init: initStatus } = require('./overlays/status');\n\n// eslint-disable-next-line no-undef, no-unused-vars\nconst options = ʎɐɹɔosǝʌɹǝs;\nconst { address, client, progress, secure, status } = options;\nconst protocol = secure ? 'wss' : 'ws';\nconst socket = new WebSocket(`${protocol}://${(client || {}).address || address}/wps`);\n\n// prevents ECONNRESET errors on the server\nwindow.addEventListener('beforeunload', () => socket.close());\n\nsocket.addEventListener('message', (message) => {\n  const { action, data } = JSON.parse(message.data);\n  const { errors, hash = '<?>', warnings } = data || {};\n  const shortHash = hash.slice(0, 7);\n\n  switch (action) {\n    case 'connected':\n      info('WebSocket connected');\n      break;\n    case 'errors':\n      error(`Build ${shortHash} produced errors:\\n`, errors);\n      break;\n    case 'reload':\n      window.location.reload();\n      break;\n    case 'replace':\n      replace(hash);\n      break;\n    case 'warnings':\n      warn(`Build ${shortHash} produced warnings:\\n`, warnings);\n      break;\n    default:\n  }\n});\n\nsocket.onclose = () => warn(`The client WebSocket was closed. ${refresh}`);\n\nif (progress === 'minimal') {\n  initMinimalProgress(options, socket);\n} else if (progress) {\n  initProgress(options, socket);\n}\n\nif (status) {\n  initStatus(options, socket);\n}\n\nif (module.hot) {\n  info('Hot Module Replacement is active');\n\n  if (options.liveReload) {\n    info('Live Reload taking precedence over Hot Module Replacement');\n  }\n} else {\n  warn('Hot Module Replacement is inactive');\n}\n\nif (!module.hot && options.liveReload) {\n  info('Live Reload is active');\n}\n","/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { error, info, refresh, warn } = require('./client-log');\n\nconst { apply, check, status } = module.hot;\nlet latest = true;\n\nconst hmr = {\n  onUnaccepted(data) {\n    warn('Change in unaccepted module(s):\\n', data);\n    warn(data);\n  },\n  onDeclined(data) {\n    warn('Change in declined module(s):\\n', data);\n  },\n  onErrored(data) {\n    error('Error in module(s):\\n', data);\n  }\n};\n\nconst replace = async (hash) => {\n  if (hash) {\n    // eslint-disable-next-line no-undef\n    latest = hash.includes(__webpack_hash__);\n  }\n\n  if (!latest) {\n    const hmrStatus = status();\n\n    if (hmrStatus === 'abort' || hmrStatus === 'fail') {\n      warn(`An HMR update was triggered, but ${hmrStatus}ed. ${refresh}`);\n      return;\n    }\n\n    let modules = await check(false);\n\n    if (!modules) {\n      warn(`No modules found for replacement. ${refresh}`);\n      return;\n    }\n\n    modules = await apply(hmr);\n\n    if (modules) {\n      latest = true;\n      info(`Build ${hash.slice(0, 7)} replaced:\\n`, modules);\n    }\n  }\n};\n\nmodule.exports = { replace };\n","/*\n  Copyright © 2018 Andrew Powell, Matheus Gonçalves da Silva\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { addCss, addHtml } = require('./util');\n\nconst ns = 'wps-progress';\nconst css = `\n@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,700');\n\n#${ns}{\n  width: 200px;\n  height: 200px;\n  position: absolute;\n  right: 5%;\n  top: 5%;\n  transition: opacity .25s ease-in-out;\n  z-index: 1000;\n}\n\n#${ns}-bg {\n  fill: #282d35;\n}\n\n#${ns}-fill {\n  fill: rgba(0, 0, 0, 0);\n  stroke: rgb(186, 223, 172);\n  stroke-dasharray: 219.99078369140625;\n  stroke-dashoffset: -219.99078369140625;\n  stroke-width: 10;\n  transform: rotate(90deg)translate(0px, -80px);\n  transition: stroke-dashoffset 1s;\n}\n\n#${ns}-percent {\n  font-family: 'Open Sans';\n  font-size: 18px;\n  fill: #ffffff;\n}\n\n#${ns}-percent-value {\n  alignment-baseline: middle;\n  text-anchor: middle;\n}\n\n#${ns}-percent-super {\n  fill: #bdc3c7;\n  font-size: .45em;\n  baseline-shift: 10%;\n}\n\n.${ns}-noselect {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: default;\n}\n\n@keyframes ${ns}-hidden-display {\n\t0% {\n\t\topacity: 1;\n\t\ttransform: scale(1);\n\t\t-webkit-transform: scale(1);\n\t}\n\t99% {\n\t\tdisplay: inline-flex;\n\t\topacity: 0;\n\t\ttransform: scale(0);\n\t\t-webkit-transform: scale(0);\n\t}\n\t100% {\n\t\tdisplay: none;\n\t\topacity: 0;\n\t\ttransform: scale(0);\n\t\t-webkit-transform: scale(0);\n\t}\n}\n\n.${ns}-hidden{\n  animation: ${ns}-hidden-display .3s;\n  animation-fill-mode:forwards;\n  display: inline-flex;\n}\n`;\n\nconst html = `\n<svg id=\"${ns}\" class=\"${ns}-noselect ${ns}-hidden\" x=\"0px\" y=\"0px\" viewBox=\"0 0 80 80\">\n  <circle id=\"${ns}-bg\" cx=\"50%\" cy=\"50%\" r=\"35\"></circle>\n  <path id=\"${ns}-fill\" d=\"M5,40a35,35 0 1,0 70,0a35,35 0 1,0 -70,0\" />\n  <text id=\"${ns}-percent\" x=\"50%\" y=\"51%\"><tspan id=\"${ns}-percent-value\">0</tspan><tspan id=\"${ns}-percent-super\">%</tspan></text>\n</svg>\n`;\n\nconst update = (percent) => {\n  const max = -219.99078369140625;\n  const value = document.querySelector(`#${ns}-percent-value`);\n  const track = document.querySelector(`#${ns}-fill`);\n  const offset = ((100 - percent) / 100) * max;\n\n  track.setAttribute('style', `stroke-dashoffset: ${offset}`);\n  value.innerHTML = percent.toString();\n};\n\nconst reset = (svg) => {\n  svg.classList.add(`${ns}-hidden`);\n  setTimeout(() => update(0), 1e3);\n};\n\nconst init = (options, socket) => {\n  document.addEventListener('DOMContentLoaded', () => {\n    addCss(css);\n    addHtml(html);\n  });\n\n  socket.addEventListener('message', (message) => {\n    const { action, data } = JSON.parse(message.data);\n\n    if (action !== 'progress') {\n      return;\n    }\n\n    const percent = Math.floor(data.percent * 100);\n    const svg = document.querySelector(`#${ns}`);\n\n    if (!svg) {\n      return;\n    }\n\n    // we can safely call this even if it doesn't have the class\n    svg.classList.remove(`${ns}-hidden`);\n\n    if (data.percent === 1) {\n      setTimeout(() => reset(svg), 5e3);\n    }\n\n    update(percent);\n  });\n};\n\nmodule.exports = { init };\n","/*\n  Copyright © 2018 Andrew Powell, Matheus Gonçalves da Silva\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { addCss, addHtml } = require('./util');\n\nconst ns = 'wps-progress-minimal';\nconst html = `\n<div id=\"${ns}\" class=\"${ns}-hidden\">\n  <div id=\"${ns}-bar\"></div>\n</div>\n`;\nconst css = `\n#${ns} {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 4px;\n  width: 100vw;\n}\n\n#${ns}-bar {\n  width: 0%;\n  height: 4px;\n  background-color: rgb(186, 223, 172);\n  transition: width 1s ease-in-out;\n}\n\n.${ns}-hidden{\n  display: none;\n}\n`;\n\nconst update = (percent) => {\n  const bar = document.querySelector(`#${ns}-bar`);\n  bar.style.width = `${percent}%`;\n};\n\nconst reset = (wrapper) => {\n  wrapper.classList.add(`${ns}-hidden`);\n  setTimeout(() => update(0), 1e3);\n};\n\nconst init = (options, socket) => {\n  document.addEventListener('DOMContentLoaded', () => {\n    addHtml(html);\n    addCss(css);\n  });\n\n  socket.addEventListener('message', (message) => {\n    const { action, data } = JSON.parse(message.data);\n\n    if (action !== 'progress') {\n      return;\n    }\n\n    const percent = Math.floor(data.percent * 100);\n    const wrapper = document.querySelector(`#${ns}`);\n\n    wrapper.classList.remove(`${ns}-hidden`);\n\n    if (data.percent === 1) {\n      setTimeout(() => reset(wrapper), 5e3);\n    }\n\n    update(percent);\n  });\n};\n\nmodule.exports = {\n  init\n};\n","/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { addCss, addHtml, socketMessage } = require('./util');\n\nconst ns = 'wps-status';\nconst css = `\n@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,700');\n\n#${ns} {\n  background: #282d35;\n  border-radius: 0.6em;\n  display: flex;\n  flex-direction: column;\n\tfont-family: 'Open Sans', Helvetica, Arial, sans-serif;\n\tfont-size: 10px;\n  height: 90%;\n  margin: 0 auto;\n  max-height: 20em;\n  min-height: 20em;\n  opacity: 1;\n  overflow: hidden;\n  padding-bottom: 3em;\n  position: relative;\n  transition: opacity .25s ease-in-out;\n  width: 95%;\n}\n\n@keyframes ${ns}-hidden-display {\n\t0% {\n\t\topacity: 1;\n\t}\n\t99% {\n\t\tdisplay: inline-flex;\n\t\topacity: 0;\n\t}\n\t100% {\n\t\tdisplay: none;\n\t\topacity: 0;\n\t}\n}\n\n#${ns}.${ns}-hidden {\n  animation: ${ns}-hidden-display .3s;\n  animation-fill-mode:forwards;\n  display: none;\n}\n\n#${ns}.${ns}-min {\n  animation: minimize 10s;\n  bottom: 2em;\n  cursor: pointer;\n  height: 6em;\n  min-height: 6em;\n  padding-bottom: 0;\n  position: absolute;\n  right: 2em;\n  width: 6em;\n}\n\n#${ns}.${ns}-min #${ns}-beacon {\n  display: block;\n}\n\n#${ns}-title {\n  color: #fff;\n  font-size: 1.2em;\n  font-weight: normal;\n  margin: 0;\n  padding: 0.6em 0;\n  text-align: center;\n  width: 100%;\n}\n\n#${ns}.${ns}-min #${ns}-title {\n  display: none;\n}\n\n#${ns}-title-errors {\n  color: #ff5f58;\n  font-style: normal;\n  padding-left: 1em;\n}\n\n#${ns}-title-warnings {\n  color: #ffbd2e;\n  font-style: normal;\n  padding-left: 1em;\n}\n\n#${ns}-problems {\n  overflow-y: auto;\n  padding: 1em 2em;\n}\n\n#${ns}-problems pre {\n  color: #ddd;\n  display: block;\n  font-size: 1.3em;\n\tfont-family: 'Open Sans', Helvetica, Arial, sans-serif;\n  white-space: pre-wrap;\n}\n\n#${ns}-problems pre em {\n  background: #ff5f58;\n  border-radius: 0.3em;\n  color: #641e16;\n  font-style: normal;\n  line-height: 3em;\n  margin-right: 0.4em;\n  padding: 0.1em 0.4em;\n  text-transform: uppercase;\n}\n\npre#${ns}-warnings em {\n  background: #ffbd2e;\n  color: #3e2723;\n}\n\npre#${ns}-success {\n  display: none;\n  text-align: center;\n}\n\npre#${ns}-success em {\n  background: #7fb900;\n  color: #004d40;\n}\n\n#${ns}-problems.${ns}-success #${ns}-success {\n  display: block;\n}\n\n#${ns}.${ns}-min #${ns}-problems {\n  display: none;\n}\n\n#${ns}-nav {\n  opacity: 0.5;\n  padding: 1.2em;\n  position: absolute;\n}\n\n#${ns}.${ns}-min #${ns}-nav {\n  display: none;\n}\n\n#${ns}-nav:hover {\n  opacity: 1;\n}\n\n#${ns}-nav div {\n  background: #ff5f58;\n  border-radius: 1.2em;\n  cursor: pointer;\n  display: inline-block;\n  height: 1.2em;\n  position: relative;\n  width: 1.2em;\n}\n\ndiv#${ns}-min {\n  background: #ffbd2e;\n  margin-left: 0.8em;\n}\n\n#${ns}-beacon {\n  border-radius: 3em;\n  display: none;\n  font-size: 10px;\n  height: 3em;\n  margin: 1.6em auto;\n  position: relative;\n  width: 3em;\n}\n\n#${ns}-beacon:before, #${ns}-beacon:after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(127,185,0, 0.2);\n  border-radius: 3em;\n  opacity: 0;\n}\n\n#${ns}-beacon:before {\n  animation: ${ns}-pulse 3s infinite linear;\n  transform: scale(1);\n}\n\n#${ns}-beacon:after {\n  animation: ${ns}-pulse 3s 2s infinite linear;\n}\n\n\n@keyframes ${ns}-pulse {\n  0% {\n    opacity: 0;\n    transform: scale(0.6);\n  }\n  33% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    opacity: 0;\n    transform: scale(1.4);\n  }\n}\n\n#${ns}-beacon mark {\n  background: rgba(127, 185, 0, 1);\n  border-radius: 100% 100%;\n  height: 1em;\n  left: 1em;\n  position: absolute;\n  top: 1em;\n  width: 1em;\n}\n\n#${ns}-beacon.${ns}-error mark {\n  background: #ff5f58;\n}\n\n#${ns}-beacon.${ns}-error:before, #${ns}-beacon.error:after {\n  background: rgba(255, 95, 88, 0.2);\n}\n\n#${ns}-beacon.${ns}-warning mark {\n  background: #ffbd2e;\n}\n\n#${ns}-beacon.${ns}-warning:before, #${ns}-beacon.warning:after {\n  background: rgba(255, 189, 46, 0.2);\n}\n`;\n\nconst html = `\n<aside id=\"${ns}\" class=\"${ns}-hidden\" title=\"build status\">\n  <figure id=\"${ns}-beacon\">\n    <mark/>\n  </figure>\n  <nav id=\"${ns}-nav\">\n    <div id=\"${ns}-close\" title=\"close\"></div>\n    <div id=\"${ns}-min\" title=\"minmize\"></div>\n  </nav>\n  <h1 id=\"${ns}-title\">\n    build status\n    <em id=\"${ns}-title-errors\"></em>\n    <em id=\"${ns}-title-warnings\"></em>\n  </h1>\n  <article id=\"${ns}-problems\">\n    <pre id=\"${ns}-success\"><em>Build Successful</em></pre>\n    <pre id=\"${ns}-errors\"></pre>\n    <pre id=\"${ns}-warnings\"></pre>\n  </article>\n</aside>\n`;\n\nconst init = (options, socket) => {\n  const hidden = `${ns}-hidden`;\n  let aside;\n  let beacon;\n  let problems;\n  let preErrors;\n  let preWarnings;\n  let titleErrors;\n  let titleWarnings;\n\n  const reset = () => {\n    preErrors.innerHTML = '';\n    preWarnings.innerHTML = '';\n    problems.classList.remove(`${ns}-success`);\n    beacon.className = '';\n  };\n\n  const addErrors = (errors) => {\n    if (errors.length) {\n      beacon.classList.add(`${ns}-error`);\n\n      for (const error of errors) {\n        const markup = `<em>Error</em> in ${error}`;\n        addHtml(markup, preErrors);\n      }\n\n      titleErrors.innerText = `${errors.length} Error(s)`;\n    } else {\n      titleErrors.innerText = '';\n    }\n    aside.classList.remove(hidden);\n  };\n\n  const addWarnings = (warnings) => {\n    if (warnings.length) {\n      if (!beacon.classList.contains(`${ns}-error`)) {\n        beacon.classList.add(`${ns}-warning`);\n      }\n\n      for (const warning of warnings) {\n        const markup = `<em>Warning</em> in ${warning}`;\n        addHtml(markup, preWarnings);\n      }\n\n      titleWarnings.innerText = `${warnings.length} Warning(s)`;\n    } else {\n      titleWarnings.innerText = '';\n    }\n\n    aside.classList.remove(hidden);\n  };\n\n  document.addEventListener('DOMContentLoaded', () => {\n    addCss(css);\n    [aside] = addHtml(html);\n    beacon = document.querySelector(`#${ns}-beacon`);\n    problems = document.querySelector(`#${ns}-problems`);\n    preErrors = document.querySelector(`#${ns}-errors`);\n    preWarnings = document.querySelector(`#${ns}-warnings`);\n    titleErrors = document.querySelector(`#${ns}-title-errors`);\n    titleWarnings = document.querySelector(`#${ns}-title-warnings`);\n\n    const close = document.querySelector(`#${ns}-close`);\n    const min = document.querySelector(`#${ns}-min`);\n\n    aside.addEventListener('click', () => {\n      aside.classList.remove(`${ns}-min`);\n    });\n\n    close.addEventListener('click', () => {\n      aside.classList.add(`${ns}-hidden`);\n    });\n\n    min.addEventListener('click', (e) => {\n      aside.classList.add(`${ns}-min`);\n      e.stopImmediatePropagation();\n    });\n  });\n\n  socketMessage(socket, (action, data) => {\n    if (!aside) {\n      return;\n    }\n\n    switch (action) {\n      case 'problems':\n        reset();\n        addErrors(data.errors);\n        addWarnings(data.warnings);\n        aside.classList.remove(hidden);\n        break;\n      case 'replace':\n        if (!preErrors.children.length && !preWarnings.children.length) {\n          return;\n        }\n\n        reset();\n        problems.classList.add(`${ns}-success`);\n        aside.classList.remove(hidden);\n\n        setTimeout(() => aside.classList.add(hidden), 3e3);\n        break;\n      default:\n    }\n  });\n};\n\nmodule.exports = { init };\n","\nexport const GLTF_VERSION = '2.0';\n\nexport const COMPONENT = Object.freeze({\n    SIZE: Object.freeze({\n        '5120': 1,\n        '5121': 1,\n        '5122': 2,\n        '5123': 2,\n        '5125': 4,\n        '5126': 4\n    }),\n    TYPE: Object.freeze({\n        BYTE: 5120,\n        UNSIGNED_BYTE: 5121,\n        SHORT: 5122,\n        UNSIGNED_SHORT: 5123,\n        UNSIGNED_INT: 5125,\n        FLOAT: 5126\n    }),\n    ID: Object.freeze({\n        '5120': 'BYTE',\n        '5121': 'UNSIGNED_BYTE',\n        '5122': 'SHORT',\n        '5123': 'UNSIGNED_SHORT',\n        '5125': 'UNSIGNED_INT',\n        '5126': 'FLOAT'\n    })\n});\n\nexport const TYPE = Object.freeze({\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n});\n\nexport const PROJECTION = Object.freeze({\n    ORTHOGRAPHIC: 'orthographic',\n    PERSPECTIVE: 'perspective'\n});\n\nexport const ATTRIBUTE_LOCATION = Object.freeze({\n    POSITION: 0,\n    NORMAL: 1,\n    TEXCOORD_0: 2,\n    JOINTS_0: 3,\n    JOINTS_1: 5,\n    WEIGHTS_0: 4,\n    WEIGHTS_1: 6,\n    TANGENT: 7\n});\n\nexport const VALID_ACCESSOR_TYPES = Object.freeze({\n    INDEX: { type: ['SCALAR'], componentType: [COMPONENT.TYPE.UNSIGNED_BYTE, COMPONENT.TYPE.UNSIGNED_SHORT, COMPONENT.TYPE.UNSIGNED_INT] },\n    POSITION: { type: ['VEC3'], componentType: [COMPONENT.TYPE.FLOAT] },\n    NORMAL: { type: ['VEC3'], componentType: [COMPONENT.TYPE.FLOAT] },\n    TANGENT: { type: ['VEC4'], componentType: [COMPONENT.TYPE.FLOAT] },\n    TEXCOORD_0: { type: ['VEC2'], componentType: [COMPONENT.TYPE.FLOAT, COMPONENT.TYPE.UNSIGNED_BYTE, COMPONENT.TYPE.UNSIGNED_SHORT] },\n    TEXCOORD_1: { type: ['VEC2'], componentType: [COMPONENT.TYPE.FLOAT, COMPONENT.TYPE.UNSIGNED_BYTE, COMPONENT.TYPE.UNSIGNED_SHORT] },\n    COLOR_0: { type: ['VEC3', 'VEC4'], componentType: [COMPONENT.TYPE.FLOAT, COMPONENT.TYPE.UNSIGNED_BYTE, COMPONENT.TYPE.UNSIGNED_SHORT] },\n    JOINTS_0: { type: ['VEC4'], componentType: [COMPONENT.TYPE.UNSIGNED_BYTE, COMPONENT.TYPE.UNSIGNED_SHORT] },\n    WEIGHTS_0: { type: ['VEC4'], componentType: [COMPONENT.TYPE.FLOAT, COMPONENT.TYPE.UNSIGNED_BYTE, COMPONENT.TYPE.UNSIGNED_SHORT] }\n});\n\nexport const TARGET = Object.freeze({\n    ELEMENT_ARRAY_BUFFER: 34963,\n    ARRAY_BUFFER: 34962\n});","/**\n * Scene\n * A collection of root nodes of a scene.\n */\n\nexport default (nodes = [], name = null) => {\n\n    return {\n        nodes,\n        name\n    };\n\n};","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","/**\n * Node\n * A node in the node hierarchy.\n */\n\nimport { vec3, mat4, quat } from 'gl-matrix';\n\nexport default ({\n\n    name = null,\n\n    parent = null,\n    children = [],\n\n    mesh = null,\n    camera = null,\n\n    rotation = quat.create(),\n    translation = vec3.fromValues(0, 0, 0),\n    scale = vec3.fromValues(1, 1, 1),\n\n    matrix = null\n\n}) => {\n\n    const node = {\n\n        name,\n\n        children,\n\n        mesh,\n        camera,\n\n        localMatrix: mat4.create(),\n        worldMatrix: mat4.create(),\n\n        translation,\n        scale,\n        rotation, // quaternion\n\n        add(child) {\n            if (child && this.children.indexOf(child) === -1) {\n                this.children.push(child);\n            }\n        },\n\n        remove(child) {\n            if (child) {\n                let index = this.children.indexOf(child);\n\n                if (index !== -1) {\n                    this.children.splice(index, 1);\n                    child.parent = null;\n                }\n            }\n        },\n\n        tick(parentWorldMatrix = null) {\n            this.updateLocalMatrix(); // Recalculate this node's localMatrix.\n\n            // Do this if the node has a parent\n            if (parentWorldMatrix !== null) {\n\n                // Multiply the localMatrix of this node with the worldMatrix of its parent.\n                mat4.multiply(this.worldMatrix, parentWorldMatrix, this.localMatrix);\n\n            } else {\n\n                //Just set the localMatrix as the worldMatrix since this node does not have a parent\n                mat4.copy(this.worldMatrix, this.localMatrix);\n\n            }\n\n            // Propagate the update downwards in the scene tree \n            //(the children will use this node's worldMatrix in the tick)\n            for (let i = 0; i < this.children.length; i++) {\n                this.children[i].tick(this.worldMatrix);\n            }\n\n        },\n\n        updateLocalMatrix() {\n            mat4.fromRotationTranslationScale(this.localMatrix, this.rotation, this.translation, this.scale);\n        },\n\n        setScale(x, y, z) {\n            this.scale[0] = x;\n            this.scale[1] = y;\n            this.scale[2] = z;\n        },\n\n        applyScale(x, y, z) {\n            this.scale[0] *= x;\n            this.scale[1] *= y;\n            this.scale[2] *= z;\n        },\n\n        setTranslation(x, y, z) {\n            this.translation[0] = x;\n            this.translation[1] = y;\n            this.translation[2] = z;\n        },\n\n        applyTranslation(x, y, z) {\n            this.translation[0] += x;\n            this.translation[1] += y;\n            this.translation[2] += z;\n        },\n\n        setRotationFromEuler(x, y, z) {\n            quat.fromEuler(this.rotation, x, y, z);\n        },\n\n        applyRotationX(rad) {\n            quat.rotateX(this.rotation, this.rotation, rad);\n        },\n\n        applyRotationY(rad) {\n            quat.rotateY(this.rotation, this.rotation, rad);\n        },\n\n        applyRotationZ(rad) {\n            quat.rotateZ(this.rotation, this.rotation, rad);\n        }\n    };\n\n    if (parent) {\n        parent.add(node);\n    }\n\n    if (matrix) {\n        mat4.getRotation(node.rotation, matrix);\n        mat4.getTranslation(node.translation, matrix);\n        mat4.getScaling(node.scale, matrix);\n    }\n\n    return node;\n};","/**\n * An orthographic camera containing properties to create an orthographic projection matrix.\n */\n\nimport { mat4 } from 'gl-matrix';\n\nexport default ({ xmag = 1.0, ymag = 1.0, zfar = 100, znear = 0 }, name = null) => {\n\n    return {\n        \n        type: 'orthographic',\n        orthographic: {\n            xmag,\n            ymag,\n            zfar,\n            znear\n        },\n        perspective: null,\n        name,\n\n        projectionMatrix: mat4.ortho(mat4.create(), -xmag, xmag, -ymag, ymag, znear, zfar),\n        \n        updateProjectionMatrix() {\n            const { xmag, ymag, zfar, znear } = this.orthographic;\n            this.projectionMatrix = mat4.ortho(this.projectionMatrix, -xmag, xmag, -ymag, ymag, znear, zfar);\n        }\n\n    };\n\n};","/**\n * A perspective camera containing properties to create a perspective projection matrix.\n */\n\nimport { mat4 } from 'gl-matrix';\n\nexport default ({ aspectRatio, yfov = 1.0472, zfar = null, znear = 1.0}, name = null ) => {\n\n    return {\n        \n        type: 'perspective',\n        perspective: {\n            aspectRatio,\n            yfov,\n            zfar,\n            znear\n        },\n        orthographic: null,\n        name,\n\n        projectionMatrix: mat4.perspective(mat4.create(), yfov, aspectRatio, znear, zfar),\n\n        updateProjectionMatrix() {\n            const { aspectRatio, yfov, zfar, znear } = this.perspective;\n            this.projectionMatrix = mat4.perspective(mat4.create(), yfov, aspectRatio, znear, zfar);\n        }\n\n    };\n\n};","/**\n * Primitive\n * Geometry to be rendered with the given material.\n */\n\nexport default (attributes, mode = 4, material, indices = null) => {\n\n    return {\n        attributes,\n        indices, // if defined use drawElements, else drawArrays\n        material,\n        mode,\n        extras: {}\n    };\n    \n};","\nimport { GLTF_VERSION, COMPONENT, VALID_ACCESSOR_TYPES, PROJECTION, TARGET } from './core/constants';\nimport scene from './graph/scene';\nimport node from './graph/node';\n\nimport orthographic from './camera/orthographic';\nimport perspective from './camera/perspective';\n\nimport mesh from './mesh/mesh';\nimport primitive from './mesh/primitive';\nimport accessor from './mesh/accessor';\nimport bufferView from './mesh/bufferView';\n\nconst SUPPORTED_VERSION = GLTF_VERSION.split('.').map(a => parseInt(a));\n\n\nexport default async (raw) => {\n\n    const gltf = JSON.parse(raw);\n\n    let version = (gltf.asset.minVersion ? gltf.asset.minVersion : gltf.asset.version).split('.').map(a => parseInt(a));\n\n    if (SUPPORTED_VERSION[0] !== version[0]) {\n        // TODO: give feedback, major version is incompatible.\n        return null;\n    }\n\n    if (gltf.asset.minVersion && SUPPORTED_VERSION[1] < version[1]) {\n        // TODO: give feedback, minor version is incompatible.\n        return null;\n    }\n\n\n    const buffers = await Promise.all(gltf.buffers.map(({ uri }) => {\n        return fetch(uri).then(res => res.arrayBuffer()); // use fetch to gelt data from uri.\n    }));\n\n    const bufferViews = gltf.bufferViews.map(({\n        buffer: bufferIndex,\n        byteLength,\n        byteOffset,\n        target,\n        byteStride\n    }) => {\n\n        return bufferView(buffers[bufferIndex], byteLength, byteOffset, target, byteStride);\n\n    });\n\n    const accessors = gltf.accessors.map(({\n        bufferView: bufferViewIndex,\n        componentType,\n        type,\n        count,\n        min,\n        max,\n        byteOffset\n    }) => {\n\n        if (componentType === COMPONENT.TYPE.FLOAT) {\n            min = min.map(a => Math.fround(a));\n            max = max.map(a => Math.fround(a));\n        }\n\n        return accessor(bufferViews[bufferViewIndex], componentType, type, count, min, max, byteOffset);\n\n    });\n\n    function createPrimitive({ attributes: attributeIndices, mode, indices: indicesIndex }) {\n\n        let attributes = {};\n\n        for (let key in attributeIndices) {\n\n            let accessor = accessors[attributeIndices[key]];\n\n            attributes[key] = accessor;\n\n            if (\n                (VALID_ACCESSOR_TYPES[key] &&\n                VALID_ACCESSOR_TYPES[key].type.includes(accessor.type) &&\n                VALID_ACCESSOR_TYPES[key].componentType.includes(accessor.componentType))\n                === false\n            ) {\n                throw Error('GLTF2.0: Accessor is invalid.');\n            }\n        }\n\n        const indices = accessors[indicesIndex];\n\n        if (!VALID_ACCESSOR_TYPES.INDEX.type.includes(indices.type) || !VALID_ACCESSOR_TYPES.INDEX.componentType.includes(indices.componentType)) {\n            throw Error('GLTF2.0: Indices accessor should have componentType { 5121, 5123, 5125 }, and type \"SCALAR\".');\n        }\n\n        const ibv = indices.bufferView;\n\n        if (ibv.target && ibv.target !== TARGET.ELEMENT_ARRAY_BUFFER) {\n            throw Error('GLTF2.0: Indices accessor should have a target equal to 34963 (ELEMENT_ARRAY_BUFFER).');\n        }\n\n        // TODO: add material.\n        return primitive(attributes, mode, null, indices);\n\n    }\n\n    const meshes = gltf.meshes.map(({\n        primitives: primitiveObjects,\n        name\n    }) => {\n\n        let primitives = primitiveObjects.map((object) => createPrimitive(object));\n\n        return mesh(primitives, name);\n\n    });\n\n    const cameras = gltf.cameras.map(({\n        name,\n        type,\n        orthographic: orthographicProperties,\n        perspective: perspectiveProperties\n    }) => {\n\n        if (type === PROJECTION.ORTHOGRAPHIC) {\n            return orthographic(orthographicProperties, name);\n        } else if (type === PROJECTION.PERSPECTIVE) {\n            return perspective(perspectiveProperties, name);\n        } else {\n            // TODO: type not defined, throw?\n            return null;\n        }\n\n    });\n\n    // Note:\n    // We assume that the nodes form a disjoint union of strict trees, as described in the specification.\n    function createNode(index) {\n        let {\n            name,\n\n            rotation,\n            translation,\n            scale,\n            matrix,\n\n            mesh: meshIndex,\n            camera: cameraIndex,\n\n            children: childIndices = []\n\n        } = gltf.nodes[index];\n\n        return node({\n            name,\n            mesh: meshes[meshIndex],\n            camera: cameras[cameraIndex],\n            rotation,\n            translation,\n            scale,\n            matrix,\n\n            // recusively create nodes for the children.\n            children: childIndices.map((index) => createNode(index))\n        });\n\n    }\n\n    const scenes = gltf.scenes.map(({\n        nodes: nodeIndices,\n        name\n    }) => {\n\n        return scene(nodeIndices.map((index) => createNode(index)), name);\n\n    });\n\n    return {\n        scene: scenes[gltf.scene],\n        scenes\n    };\n};","\nfunction compile(gl, source, type) {\n    let shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        throw Error(gl.getShaderInfoLog(shader));\n    }\n\n    return shader;\n}\n\nexport default (gl, vertexShaderSource, fragmentShaderSource) => {\n\n    let vertexShader = compile(gl, vertexShaderSource, gl.VERTEX_SHADER);\n    let fragmentShader = compile(gl, fragmentShaderSource, gl.FRAGMENT_SHADER);\n\n    let program = gl.createProgram();\n\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        throw Error('Error when building shaders.');\n    }\n\n    return program;\n\n};","/**\n * Warp\n * A super simple WebGL2 javascript library.\n * Written by Oskar Bråten, 13/10/2017.\n * ported to webpack and gl-matrix, 07/06/2018\n */\n\nimport { default as importer } from './lib/importer';\nimport { default as renderer } from './lib/core/renderer';\n\nimport { default as node } from './lib/graph/node';\n\nimport { default as orthographic } from './lib/camera/orthographic';\nimport { default as perspective } from './lib/camera/perspective';\n\n\nexport default {\n    node,\n    importer,\n    renderer,\n    perspectiveCamera: perspective,\n    orthographicCamera: orthographic\n};\n","/**\n * BufferView\n * A bufferView represents a subset of data in a buffer, defined by an integer offset into the buffer specified in the byteOffset property and a byteLength property to specify length of the buffer view.\n */\n\nexport default (buffer, byteLength, byteOffset = 0, target = target.ARRAY_BUFFER, byteStride = 0) => {\n\n    return {\n        buffer, // Javascript ArrayBuffer (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)\n\n        byteLength,\n        byteOffset,\n        byteStride, // int: [4, 252], default: 0 (tightly packed)\n\n        target, // setting the target allows the runtime to upload the bufferView to the GPU without having to infer it from the accessors.\n\n        extras: {}\n    };\n    \n};","/**\n * Accessor\n * All large data for meshes, skins, and animations is stored in buffers and retrieved via accessors.\n */\n\n// constants:\n// const componentType = {\n//     BYTE: 5120,\n//     UNSIGNED_BYTE: 5121,\n//     SHORT: 5122,\n//     UNSIGNED_SHORT: 5123,\n//     UNSIGNED_INT: 5125,\n//     FLOAT: 5126\n// };\n\n// const type = {\n//     SCALAR: 1,\n//     VEC2: 2,\n//     VEC3: 3,\n//     VEC4: 4,\n//     MAT2: 4,\n//     MAT3: 9,\n//     MAT4: 16\n// };\n\nexport default (bufferView, componentType, type, count, min, max, byteOffset = 0, normalized = false) => {\n\n    return {\n        bufferView,\n\n        type,\n        componentType,\n\n        byteOffset,\n        count,\n\n        min,\n        max,\n\n        normalized\n    };\n\n};","/**\n * Mesh\n * A drawable collection of primitives.\n */\n\nexport default (primitives, name = null) => {\n\n    return {\n        primitives, // An array of primitives, each defining geometry to be rendered with a material.\n        name\n    };\n    \n};","\nimport { mat4 } from 'gl-matrix';\n\nimport { ATTRIBUTE_LOCATION, TYPE, COMPONENT } from './constants';\n\nimport buildShaderFromSource from '../shading/shader';\n\nimport basicVertexShaderSource from '../shading/shaders/basic-vertex-shader.glsl';\nimport basicFragmentShaderSource from '../shading/shaders/basic-fragment-shader.glsl';\n\n\nexport default (width, height) => {\n\n    const domElement = document.createElement('canvas');\n    domElement.width = width;\n    domElement.height = height;\n\n    const gl = domElement.getContext('webgl2');\n\n    if (!gl) {\n        console.warn('WebGL 2.0 isn\\'t available');\n        return null;\n    }\n\n    gl.viewport(0, 0, domElement.width, domElement.height);\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.CULL_FACE);\n\n    const program = buildShaderFromSource(gl, basicVertexShaderSource, basicFragmentShaderSource);\n\n    gl.useProgram(program);\n\n\n    const renderer = {\n\n        domElement,\n        gl,\n\n        setSize(width, height) {\n            domElement.width = width;\n            domElement.height = height;\n            gl.viewport(0, 0, domElement.width, domElement.height);\n            gl.clearColor(1.0, 1.0, 1.0, 1.0);\n        },\n\n        draw(node, viewMatrix) {\n\n            let modelViewMatrix = mat4.multiply(mat4.create(), viewMatrix, node.worldMatrix);\n\n            gl.uniformMatrix4fv(gl.getUniformLocation(program, 'modelViewMatrix'), false, modelViewMatrix);\n\n            let mesh = node.mesh;\n\n            for (let i = 0; i < mesh.primitives.length; i++) {\n\n                let primitive = mesh.primitives[i];\n\n                if (primitive.extras.vao) {\n\n                    gl.bindVertexArray(primitive.extras.vao);\n\n                    if (primitive.indices) {\n\n                        const offset = primitive.indices.byteOffset / COMPONENT.SIZE[primitive.indices.componentType];\n                        gl.drawElements(primitive.mode, primitive.indices.count, primitive.indices.componentType, offset);\n\n                    } else {\n\n                        gl.drawArrays(gl.TRIANGLES, 0, primitive.attributes.POSITION.count / 3);\n\n                    }\n\n                } else {\n\n                    throw Error('Attempted to draw primitive with no VAO (Is the mesh loaded?).');\n\n                }\n\n            }\n\n        },\n\n        render(scene, cameraNode) {\n\n            gl.clearColor(1.0, 1.0, 1.0, 1.0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n            gl.uniformMatrix4fv(gl.getUniformLocation(program, 'projectionMatrix'), false, cameraNode.camera.projectionMatrix);\n\n            const viewMatrix = mat4.invert(mat4.create(), cameraNode.worldMatrix);\n\n            let meshNodes = [];\n\n            function getMesh(node) {\n                if (node.mesh) {\n                    meshNodes.push(node);\n                }\n                node.children.map(getMesh);\n            }\n\n            scene.nodes.forEach(node => getMesh(node));\n\n            for (let i = 0; i < meshNodes.length; i++) {\n                this.draw(meshNodes[i], viewMatrix);\n            }\n\n        },\n\n        /**\n         *\n         *\n         * @param {*} n Scene, node, or mesh.\n         */\n        load(n) {\n\n            if (n.primitives) {\n\n                for (let i = 0; i < n.primitives.length; i++) {\n\n                    let primitive = n.primitives[i];\n\n                    if (primitive.extras.vao) {\n\n                        // the primitive has already been loaded.\n                        continue;\n\n                    }\n\n                    // setup VAO:\n\n                    let vao = gl.createVertexArray();\n                    gl.bindVertexArray(vao);\n\n                    if (primitive.indices) {\n\n                        let accessor = primitive.indices;\n                        let bufferView = accessor.bufferView;\n\n                        if (bufferView.extras.element_array_buffer) {\n\n                            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferView.extras.element_array_buffer);\n\n                            // the bufferView is already loaded, increment access count.\n                            bufferView.extras.bufferAccessCount += 1;\n\n                        } else {\n\n                            // create buffer and upload data.\n\n                            let buffer = gl.createBuffer();\n                            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n\n                            let dataView = new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n\n                            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, dataView, gl.STATIC_DRAW);\n\n                            bufferView.extras.element_array_buffer = buffer;\n                            bufferView.extras.bufferAccessCount = 1; // number of accessors linking to this buffer.\n\n                        }\n\n                    }\n\n                    // create and link attribute accessors, and possibly upload bufferView to GPU.\n\n                    for (let name in primitive.attributes) {\n\n                        let accessor = primitive.attributes[name];\n                        let bufferView = accessor.bufferView;\n\n                        if (bufferView.extras.array_buffer) {\n\n                            gl.bindBuffer(gl.ARRAY_BUFFER, bufferView.extras.array_buffer);\n\n                            // the bufferView is already loaded, increment access count.\n                            bufferView.extras.bufferAccessCount += 1;\n\n                        } else {\n\n                            // create buffer and upload data.\n\n                            let buffer = gl.createBuffer();\n                            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n                            let dataView = new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n\n                            gl.bufferData(gl.ARRAY_BUFFER, dataView, gl.STATIC_DRAW);\n\n                            // setup and enable vertex attributes (Using the predefined and constant locations.)\n                            gl.vertexAttribPointer(ATTRIBUTE_LOCATION[name], TYPE[accessor.type], accessor.componentType, accessor.normalized, bufferView.byteStride, accessor.byteOffset);\n                            gl.enableVertexAttribArray(ATTRIBUTE_LOCATION[name]);\n\n                            bufferView.extras.array_buffer = buffer;\n                            bufferView.extras.bufferAccessCount = 1; // number of accessors linking to this buffer.\n\n                        }\n                    }\n\n                    primitive.extras.vao = vao;\n\n                }\n\n            } else if (n.mesh) {\n\n                this.load(n.mesh);\n\n            } else if (n.children) {\n\n                n.children.forEach(this.load.bind(this));\n\n            } else if (n.nodes) {\n\n                n.nodes.forEach(this.load.bind(this));\n\n            }\n        },\n\n        /**\n         *\n         *\n         * @param {*} n Scene, node, or mesh.\n         */\n        unload(n) {\n\n            if (n.primitives) {\n                console.log(n);\n\n                for (let i = 0; i < n.primitives.length; i++) {\n\n                    let primitive = n.primitives[i];\n\n                    if (typeof primitive.extras.vao === 'undefined') {\n\n                        // the primitive has already been unloaded.\n                        continue;\n\n                    }\n\n                    if (primitive.indices) {\n\n                        let accessor = primitive.indices;\n                        let bufferView = accessor.bufferView;\n\n                        if (bufferView.extras.element_array_buffer) {\n\n                            if (bufferView.extras.bufferAccessCount > 1) {\n\n                                // the bufferView is still used by another accessor, decrement access count.\n                                bufferView.extras.bufferAccessCount -= 1;\n\n                            } else {\n\n                                gl.deleteBuffer(bufferView.extras.element_array_buffer);\n                                delete bufferView.extras.element_array_buffer;\n                                delete bufferView.extras.bufferAccessCount;\n\n                            }\n\n                        }\n\n                    }\n\n                    for (let name in primitive.attributes) {\n\n                        let accessor = primitive.attributes[name];\n                        let bufferView = accessor.bufferView;\n\n                        if (bufferView.extras.array_buffer) {\n\n                            if (bufferView.extras.bufferAccessCount > 1) {\n\n                                // the bufferView is still used by another accessor, decrement access count.\n                                bufferView.extras.bufferAccessCount -= 1;\n\n                            } else {\n\n                                gl.deleteBuffer(bufferView.extras.array_buffer);\n                                delete bufferView.extras.array_buffer;\n                                delete bufferView.extras.bufferAccessCount;\n\n                            }\n\n                        }\n\n                    }\n\n                    gl.deleteVertexArray(primitive.extras.vao);\n                    delete primitive.extras.vao;\n\n                }\n\n            } else if (n.mesh) {\n\n                this.unload(n.mesh);\n\n            } else if (n.children) {\n\n                n.children.forEach(this.unload.bind(this));\n\n            } else if (n.nodes) {\n\n                n.nodes.forEach(this.unload.bind(this));\n\n            }\n        }\n\n    };\n\n    return renderer;\n\n    // loadTexture(url) {\n    //     let image = new Image();\n\n    //     image.src = url;\n\n    //     let texture = this.gl.createTexture();\n\n    //     this.gl.activeTexture(this.gl.TEXTURE0);\n    //     this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    //     //this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, true);\n\n    //     this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n    //     this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n    //     this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n    //     this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n    //     this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 0, 255]));\n\n    //     image.addEventListener('load', () => {\n\n    //         this.gl.activeTexture(this.gl.TEXTURE0);\n    //         this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    //         this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, image);\n\n    //         this.gl.generateMipmap(this.gl.TEXTURE_2D);\n    //         this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST_MIPMAP_LINEAR);\n    //         this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\n    //     });\n\n    //     return texture;\n    // }\n\n    // loadCubeMap(urls) {\n    //     let ct = 0;\n    //     let image = new Array(6);\n\n    //     let cubeMap = this.gl.createTexture();\n\n    //     for (let i = 0; i < 6; i++) {\n    //         image[i] = new Image();\n    //         image[i].addEventListener('load', () => {\n    //             ct++;\n    //             if (ct == 6) {\n    //                 this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, cubeMap);\n    //                 this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, true);\n    //                 var targets = [\n    //                     this.gl.TEXTURE_CUBE_MAP_POSITIVE_X, this.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n    //                     this.gl.TEXTURE_CUBE_MAP_POSITIVE_Y, this.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n    //                     this.gl.TEXTURE_CUBE_MAP_POSITIVE_Z, this.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\n    //                 ];\n    //                 for (let j = 0; j < 6; j++) {\n    //                     this.gl.texImage2D(targets[j], 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, image[j]);\n    //                     this.gl.texParameteri(this.gl.TEXTURE_CUBE_MAP, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n    //                     this.gl.texParameteri(this.gl.TEXTURE_CUBE_MAP, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n    //                     this.gl.texParameterf(this.gl.TEXTURE_CUBE_MAP, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n    //                     this.gl.texParameteri(this.gl.TEXTURE_CUBE_MAP, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST);\n    //                 }\n    //                 this.gl.generateMipmap(this.gl.TEXTURE_CUBE_MAP);\n    //             }\n    //         });\n    //         image[i].src = urls[i];\n    //     }\n\n    //     return cubeMap;\n    // }\n};","\nimport { vec3, quat } from 'gl-matrix';\n\nexport default class CameraController {\n    constructor(camera) {\n        this.camera = camera;\n\n        this.FD = vec3.fromValues(0, 0, 1);\n        this.UD = vec3.fromValues(0, 1, 0);\n        this.LD = vec3.fromValues(1, 0, 0);\n\n        this.pitchQuat = quat.create();\n        this.yawQuat = quat.create();\n\n        this.longitudinalDirection = vec3.create();\n        this.lateralDirection = vec3.create();\n    }\n\n    update(pitch, yaw, longitudinal, lateral) {\n        \n        quat.setAxisAngle(this.pitchQuat, this.LD, -pitch);\n        quat.setAxisAngle(this.yawQuat, this.UD, -yaw);\n\n        quat.multiply(this.camera.rotation, this.yawQuat, quat.multiply(this.camera.rotation, this.camera.rotation, this.pitchQuat));\n\n        // longitudinal movement:\n        vec3.transformQuat(this.longitudinalDirection, this.FD, this.camera.rotation);\n        vec3.normalize(this.longitudinalDirection, this.longitudinalDirection);\n\n        vec3.scale(this.longitudinalDirection, this.longitudinalDirection, -longitudinal);\n\n        this.camera.applyTranslation(...this.longitudinalDirection);\n\n        // lateral movement:\n        vec3.transformQuat(this.lateralDirection, this.LD, this.camera.rotation);\n        vec3.normalize(this.lateralDirection, this.lateralDirection);\n\n        vec3.scale(this.lateralDirection, this.lateralDirection, -lateral);\n\n        this.camera.applyTranslation(...this.lateralDirection);\n\n    }\n}","import Warp from '../src/index';\n\nimport CameraController from './controls/CameraController';\n\nimport rawGltf from './misc/test-instances.gltf';\n\nWarp.importer(rawGltf).then((data) => {\n    console.log(data);\n\n    const renderer = Warp.renderer(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n\n    let scene = data.scene;\n\n    renderer.load(scene);\n\n    let camera = Warp.perspectiveCamera({ aspectRatio: (window.innerWidth / window.innerHeight), yfov: 70, zfar: 5000, znear: 0.1 });\n\n    window.addEventListener('resize', () => {\n        camera.perspective.aspectRatio = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    }, false);\n\n    let cameraNode = Warp.node({ name: 'Camera', camera });\n\n    scene.nodes.push(cameraNode);\n\n    let cameraController = new CameraController(cameraNode);\n\n    let canvas = renderer.domElement;\n\n    canvas.addEventListener('click', () => {\n        canvas.requestPointerLock();\n    });\n\n    let yaw = 0;\n    let pitch = 0;\n\n    function updateCamRotation(event) {\n        yaw += event.movementX * 0.001;\n        pitch += event.movementY * 0.001;\n    }\n\n    document.addEventListener('pointerlockchange', () => {\n        if (document.pointerLockElement === canvas) {\n            canvas.addEventListener('mousemove', updateCamRotation, false);\n        } else {\n            canvas.removeEventListener('mousemove', updateCamRotation, false);\n        }\n    });\n\n    let move = {\n        forward: false,\n        backward: false,\n        left: false,\n        right: false,\n        speed: 0.01\n    };\n\n\n    window.addEventListener('keydown', (e) => {\n        e.preventDefault();\n        if (e.code === 'KeyW') {\n            move.forward = true;\n        } else if (e.code === 'KeyS') {\n            move.backward = true;\n        } else if (e.code === 'KeyA') {\n            move.left = true;\n        } else if (e.code === 'KeyD') {\n            move.right = true;\n        }\n    });\n\n    window.addEventListener('keyup', (e) => {\n        e.preventDefault();\n        if (e.code === 'KeyW') {\n            move.forward = false;\n        } else if (e.code === 'KeyS') {\n            move.backward = false;\n        } else if (e.code === 'KeyA') {\n            move.left = false;\n        } else if (e.code === 'KeyD') {\n            move.right = false;\n        }\n    });\n\n\n    let then = 0;\n    function loop(now) {\n\n        const delta = now - then;\n        then = now;\n\n        const moveSpeed = move.speed * delta;\n\n        let longitudinal = 0;\n        let lateral = 0;\n\n        if (move.forward) {\n            longitudinal += moveSpeed;\n        }\n\n        if (move.backward) {\n            longitudinal -= moveSpeed;\n        }\n\n        if (move.left) {\n            lateral += moveSpeed;\n        }\n\n        if (move.right) {\n            lateral -= moveSpeed;\n        }\n\n        cameraController.update(pitch, yaw, longitudinal, lateral);\n\n        // reset movement buffers.\n        yaw = 0;\n        pitch = 0;\n\n        scene.nodes.forEach((node) => node.tick());\n\n        renderer.render(data.scene, cameraNode);\n\n\n        window.requestAnimationFrame(loop);\n    }\n\n    window.requestAnimationFrame(loop);\n\n}).catch((error) => {\n    console.log(error);\n});"],"sourceRoot":""}